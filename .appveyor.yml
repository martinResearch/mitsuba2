version: 1.0.{build}
image:
#- Visual Studio 2019
- ubuntu
test: off
skip_branch_with_pr: true
platform:
- x64
build:
  parallel: true

environment:
  matrix:
  - PYTHON_VERSION: 3.7
    MINICONDA: C:\Miniconda37-x64
    BUILD_MODE: Release    

  fast_finish: true
  TWINE_REPOSITORY_URL:  https://upload.pypi.org/legacy/
  TWINE_USERNAME: __token__

init:


install:
- ps: git submodule -q update --init --recursive
- cmd: |
    set PATH=%MINICONDA%;%MINICONDA%\Scripts;%PATH%
    set PYTHONHOME=%MINICONDA%
    conda update -y -q conda
    conda install -y -q pytest numpy scipy
- sh: pip install pytest numpy scipy

    
build_script:
#Linux
- sh: sudo apt install libc++1
- sh: sudo apt install clang-9 libc++-9-dev libc++abi-9-dev cmake ninja-build
- sh: sudo apt install libz-dev libpng-dev libjpeg-dev libxrandr-dev libxinerama-dev libxcursor-dev
- sh: sudo apt install python3-dev python3-distutils python3-setuptools
- sh: export CC=clang-9
- sh: export CXX=clang++-9
- sh: mkdir build
- sh: cd build
- sh: cmake -GNinja .. 
- sh: ninja
- sh: cd ..
- sh: pip wheel . --wheel-dir=wheelhouse --no-deps
#Windows
- cmd: set PATH=%MINICONDA%;%MINICONDA%\Scripts;%PATH%
- cmd: copy .\resources\mitsuba.conf.appveyor .\mitsuba.conf
- cmd: cmake -G "Visual Studio 16 2019" -A "x64" -DCMAKE_SUPPRESS_REGENERATION=1 .  -DMTS_OPTIX_PATH="C:\ProgramData\NVIDIA Corporation\OptiX SDK 6.5.0"
- cmd: set MSBuildLogger="C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
- cmd: cmake --build . --config %BUILD_MODE% -- /v:m /m /logger:%MSBuildLogger%
- cmd: pip wheel . --wheel-dir=wheelhouse --no-deps
#- cmd: pip install twine
#- cmd: twine upload wheelhouse/*

artifacts:
- path: "wheelhouse\\*.whl"
  name: Wheels

